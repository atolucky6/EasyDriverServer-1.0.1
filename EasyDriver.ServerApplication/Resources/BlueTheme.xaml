<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Custom="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:local="clr-namespace:EasyScada.ServerApplication">

    <local:StringEmptyToVisibilityConverter x:Key="StringEmptyToVisibilityConverter" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="White" />
    <SolidColorBrush x:Key="DisableBackBrush">#E6ECEF</SolidColorBrush>
    <SolidColorBrush x:Key="DisableForeBrush">#93A1AD</SolidColorBrush>
    <SolidColorBrush x:Key="ShapeBrush" Color="#5C7080" />
    <SolidColorBrush x:Key="HoverBrush" Color="#E4E9ED" />
    <SolidColorBrush x:Key="HelperTextBrush" Color="#5C7080" />
    <SolidColorBrush x:Key="FocusBrush">#137CBD</SolidColorBrush>
    <Color x:Key="BlackColor">#10161A</Color>
    <SolidColorBrush x:Key="BlackSolidBrush" Color="{StaticResource BlackColor}" />
    <Color x:Key="GrayBorderColor">#CCCED0</Color>
    <SolidColorBrush x:Key="GrayBorderSolidBrush" Color="{StaticResource GrayBorderColor}" />

    <!--#region Buttons-->
    <LinearGradientBrush x:Key="ButtonNormalBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FCFDFE" />
        <GradientStop Offset="0.5" Color="#F9FBFC" />
        <GradientStop Offset="1" Color="#F5F8FA" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonHoverBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FAFCFD" />
        <GradientStop Offset="0.5" Color="#F2F6F8" />
        <GradientStop Offset="1" Color="#ECF1F5" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#CFD8DF" />
        <GradientStop Offset="0.5" Color="#D8E1E8" />
        <GradientStop Offset="1" Color="#D6DFE6" />
    </LinearGradientBrush>


    <Style TargetType="{x:Type Button}">
        <Setter Property="Width" Value="80" />
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Foreground" Value="{StaticResource BlackSolidBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource GrayBorderSolidBrush}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2"
                        SnapsToDevicePixels="True">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonPressedBackground}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#979FA5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource DisableBackBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisableForeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Style x:Key="DisableBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource ButtonDisableBackground}" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <!--#region TextBox-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{StaticResource GrayBorderSolidBrush}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="{StaticResource BlackSolidBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="30" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <TextBlock
                            Margin="0,2,0,0"
                            DockPanel.Dock="Bottom"
                            FontSize="12"
                            Foreground="#C23030"
                            Text="{Binding /ErrorContent}" />
                        <AdornedElementPlaceholder />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border
                        x:Name="outerBorder"
                        Margin="-2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
                        BorderThickness="2"
                        CornerRadius="2">
                        <Border
                            Name="IsDefault"
                            Padding="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="2">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Margin="0"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                VerticalScrollBarVisibility="Auto" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="IsDefault" Property="BorderBrush" Value="#C23030" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="IsDefault" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="IsDefault" Property="Background" Value="{DynamicResource DisableBackBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisableForeBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="IsDefault" Property="BorderBrush" Value="{DynamicResource FocusBrush}" />
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="#B8D7EB" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Controls Background-->
    <Style TargetType="{x:Type dxlc:LayoutItem}">
        <Setter Property="AddColonToLabel" Value="True" />
        <Setter Property="ElementSpace" Value="12" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="{x:Type dxlc:LayoutControl}">
        <Setter Property="ItemSpace" Value="24" />
    </Style>
    <!--#endregion-->

    <!--#region CheckBox-->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#FFC8C6C4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="Root"
                        Margin="{TemplateBinding Padding}"
                        Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid
                            x:Name="Field"
                            Grid.Column="0"
                            Grid.ColumnSpan="1"
                            Width="16"
                            Height="16"
                            Margin="0,1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Border
                                x:Name="IsDefault"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" />
                            <Border
                                x:Name="IsFocused"
                                Uid="@BorderBrush=Focused"
                                BorderBrush="#FF106EBE"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Opacity="0" />
                            <Path x:Name="Indeterminate" Visibility="Collapsed">
                                <Path.Style>
                                    <Style TargetType="{x:Type Path}">
                                        <Setter Property="Data" Value="F1M0,0L8,0 8,8 0,8 0,0z" />
                                        <Setter Property="Fill" Value="White" />
                                        <Setter Property="Height" Value="8" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="Margin" Value="2" />
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="Stretch" Value="Fill" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Width" Value="8" />
                                    </Style>
                                </Path.Style>
                            </Path>
                            <Path x:Name="Checked" Visibility="Collapsed">
                                <Path.Style>
                                    <Style TargetType="{x:Type Path}">
                                        <Setter Property="Data" Value="F1M0,3L0,5 3,8 8,3 8,1 3,6 0,3z" />
                                        <Setter Property="Fill" Value="White" />
                                        <Setter Property="Height" Value="8" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="Margin" Value="2" />
                                        <Setter Property="SnapsToDevicePixels" Value="True" />
                                        <Setter Property="Stretch" Value="Fill" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="Width" Value="8" />
                                    </Style>
                                </Path.Style>
                            </Path>
                        </Grid>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Grid.ColumnSpan="1"
                            Margin="8,0,0,0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            RecognizesAccessKey="True" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="IsFocused"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Checked" Property="Fill" Value="#FFDEECF9" />
                            <Setter TargetName="Indeterminate" Property="Fill" Value="#FFDEECF9" />
                            <Setter TargetName="IsDefault" Property="BorderBrush" Value="#187FBF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Checked" Property="Fill" Value="#FFDEECF9" />
                            <Setter TargetName="Indeterminate" Property="Fill" Value="#FFDEECF9" />
                            <Setter TargetName="IsDefault" Property="Background" Value="#187FBF" />
                            <Setter TargetName="IsDefault" Property="BorderBrush" Value="#124768" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="IsFocused" Property="Opacity" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="IsFocused" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="IsFocused" Property="Opacity" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Root" Property="Opacity" Value="0.38" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter TargetName="Checked" Property="Height" Value="16" />
                            <Setter TargetName="Checked" Property="Width" Value="16" />
                            <Setter TargetName="Field" Property="Height" Value="28" />
                            <Setter TargetName="Field" Property="Width" Value="28" />
                            <Setter TargetName="Indeterminate" Property="Height" Value="16" />
                            <Setter TargetName="Indeterminate" Property="Width" Value="16" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="IsDefault" Property="Background" Value="#197FBF" />
                            <Setter TargetName="Checked" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="IsDefault" Property="Background" Value="#197FBF" />
                            <Setter TargetName="Checked" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Indeterminate" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter TargetName="Field" Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="-1" ScaleY="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--  Header Group Text Style  -->
    <Style x:Key="HeaderGroupTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#106BA3" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <!--#region ComboBox-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Border
            x:Name="outerBorder"
            Margin="-2"
            Background="{TemplateBinding BorderBrush}"
            BorderBrush="Transparent"
            BorderThickness="2"
            CornerRadius="4">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{DynamicResource GrayBorderSolidBrush}"
                    BorderThickness="1"
                    CornerRadius="2" />
                <Border
                    Grid.Column="0"
                    Margin="1"
                    Background="{TemplateBinding Background}"
                    CornerRadius="2,0,0,2" />
                <Path
                    x:Name="Arrow"
                    Grid.Column="1"
                    Width="16"
                    Height="16"
                    Margin="0,1,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z"
                    Fill="{DynamicResource ShapeBrush}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource FocusBrush}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="outerBorder" Property="BorderBrush" Value="#B8D7EB" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource FocusBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisableBackBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="#888888" />
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource DisableForeBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="IsEditable" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="White" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Height" Value="30" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            x:Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{StaticResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            x:Name="ContentSite"
                            Margin="6,3,36,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="6,3,36,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            Background="Transparent"
                            Focusable="True"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            Visibility="Hidden" />
                        <Popup
                            x:Name="Popup"
                            Margin="0,8,0,0"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                x:Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Margin="0,8,0,0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{DynamicResource GrayBorderSolidBrush}"
                                    BorderThickness="1"
                                    CornerRadius="2" />
                                <ScrollViewer Margin="4,16,4,8" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Foreground" Value="{StaticResource BlackSolidBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        x:Name="Border"
                        Padding="6,2,2,2"
                        Background="Transparent"
                        CornerRadius="2"
                        SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="true" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource FocusBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="false" />
                                <Condition Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisableForeBrush}" />
                            <Setter Property="Background" Value="{DynamicResource DisableBackBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region TabControl-->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TabPanel
                                x:Name="HeaderPanel"
                                Grid.Row="0"
                                Margin="0,0,0,0"
                                Panel.ZIndex="1"
                                Background="{TemplateBinding Background}"
                                IsItemsHost="True"
                                KeyboardNavigation.TabIndex="1" />
                            <Border
                                x:Name="Border"
                                Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                CornerRadius="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter
                                    x:Name="PART_SelectedContentHost"
                                    Margin="8"
                                    ContentSource="SelectedContent" />
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border
                            x:Name="Border"
                            Margin="6,0,6,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="0,0,0,3"
                            CornerRadius="0,0,0,0">
                            <ContentPresenter
                                x:Name="ContentSite"
                                Margin="12,6,12,6"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter Property="Foreground" Value="{DynamicResource FocusBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource FocusBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource FocusBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Style TargetType="{x:Type Window}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
</ResourceDictionary>